#include <iostream>
using namespace std;
#include <assert.h>
#include "Status.h"
#include "SqList.h"

//用于顺序表元素的输出
template <class DataType>
void Display(const DataType & e) 
{    cout << e << "  ";    }

//测试主函数
int main(void)
{
	SqList<int> list1(50),list2(50),list3(50);
	int num,data;

	cout << "Please enter 11 ordered integers(5 10 11 22 27 33 44 44 55 56 60):" << endl;//输入：5 10 11 22 27 33 44 44 55 56 60
	for(int i=1; i<=11; i++)
	{
		cin >> num;
		list1.InsertElem(i, num);
	}

	//------------以下用于测试第1小题---------------------------------
	cout << "Please enter an integer to be inserted(3):" << endl;
	cin >> data;//输入：3
	OrdListInsertElem(list1,data);//----------调用第1小题函数
	cout << "After insertion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl;
	cout << "Please enter an integer to be inserted(27):" << endl;
	cin >> data;//输入：27
	OrdListInsertElem(list1,data);//----------调用第1小题函数
	cout << "After insertion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl;
	cout << "Please enter an integer to be inserted(77):" << endl;
	cin >> data;//输入：77
	OrdListInsertElem(list1,data);//----------调用第1小题函数
	cout << "After insertion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl << endl;
	
	//------------以下用于测试第2小题---------------------------------
	cout << "Please enter an integer to be deleted(3):" << endl;
	cin >> data;//输入：3
	OrdListDeleteElem(list1,data);//----------调用第2小题函数
	cout << "After deletion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl;
	cout << "Please enter an integer to be deleted(27):" << endl;
	cin >> data;//输入：27
	OrdListDeleteElem(list1,data);//----------调用第2小题函数
	cout << "After deletion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl;
	cout << "Please enter an integer to be deleted(77):" << endl;
	cin >> data;//输入：77
	OrdListDeleteElem(list1,data);//----------调用第2小题函数
	cout << "After deletion, list1 is:" << endl;
	list1.Traverse(Display);
	cout << endl << endl;

	//------------以下用于测试第3小题---------------------------------
	cout << "Please enter 5 integers(5 27 30 36 77):" << endl;//输入：5 27 30 36 77
	for(int i=1; i<=5; i++)
	{
		cin >> num;
		list2.InsertElem(i, num);
	}
	if(OrdListMerge(list1,list2,list3) == SUCCESS)//---------调用第3小题函数
	{
		cout << "The merged list3 is:" << endl;
		list3.Traverse(Display);
	}
	else
		cout << "The space of list3 is insufficient!";
	cout << endl << endl;

	//------------以下用于测试第4小题---------------------------------
	int s,t;
	cout << "Please enter the lower bound of the deleted integer(0):" << endl;
	cin >> s;//输入：0
	cout << "Please enter the upper bound of the deleted integer(11):" << endl;
	cin >> t;//输入：11
	if(OrdListIntervalDelete(list3,s,t) == SUCCESS)//---------调用第4小题函数
	{
		cout << "After deletion, list3 is:" << endl;
		list3.Traverse(Display);
		cout << endl;
	}
	cout << "Please enter the lower bound of the deleted integer(30):" << endl;
	cin >> s;//输入：30
	cout << "Please enter the upper bound of the deleted integer(50):" << endl;
	cin >> t;//输入：50
	if(OrdListIntervalDelete(list3,s,t) == SUCCESS)//---------调用第4小题函数
	{
		cout << "After deletion, list3 is:" << endl;
		list3.Traverse(Display);
		cout << endl;
	}
	cout << "Please enter the lower bound of the deleted integer(58):" << endl;
	cin >> s;//输入：58
	cout << "Please enter the upper bound of the deleted integer(100):" << endl;
	cin >> t;//输入：100
	if(OrdListIntervalDelete(list3,s,t) == SUCCESS)//---------调用第4小题函数
	{
		cout << "After deletion, list3 is:" << endl;
		list3.Traverse(Display);
		cout << endl;
	}
	cout << endl;

	system("pause");
	return 0;
}